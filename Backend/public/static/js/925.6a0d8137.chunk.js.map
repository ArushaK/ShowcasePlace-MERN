{"version":3,"file":"static/js/925.6a0d8137.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\n// import { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport \"./PlaceForm.css\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport useForm from \"../../shared/hooks/form-hook\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nconst UpdatePlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  //const navigate = useNavigate();\r\n  const history = useHistory();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n  const placeId = useParams().placeId;\r\n\r\n  const [formState, InputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\r\n        );\r\n\r\n        setLoadedPlace(responseData.place);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.place.title,\r\n              isValid: true,\r\n            },\r\n            description: {\r\n              value: responseData.place.description,\r\n              isValid: true,\r\n            },\r\n          },\r\n          true\r\n        );\r\n      } catch (err) {}\r\n    };\r\n    fetchPlace();\r\n  }, [sendRequest, placeId, setFormData]);\r\n\r\n  const updatePlaceSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      history.push(\"/\" + auth.userId + \"/places\");\r\n      //navigate(\"/\" + auth.userId + \"/places\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedPlace && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && loadedPlace && (\r\n        <form className=\"place-form\" onSubmit={updatePlaceSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title!\"\r\n            onInput={InputHandler}\r\n            initialValue={loadedPlace.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description (at least 5 characters).\"\r\n            onInput={InputHandler}\r\n            initialValue={loadedPlace.description}\r\n            initialValid={true}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isvalid}>\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        label={props.label}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.css\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId == action.inputId) {\r\n          formIsValid = formIsValid && action.isvalid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isvalid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isvalid: action.isvalid },\r\n        },\r\n        isvalid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isvalid: initialFormValidity,\r\n  });\r\n\r\n  const InputHandler = useCallback((id, value, isvalid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isvalid: isvalid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, InputHandler, setFormData];\r\n};\r\n\r\nexport default useForm;\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (rc) => rc !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((ac) => ac.abort());\r\n    };\r\n  }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["auth","useContext","AuthContext","history","useHistory","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedPlace","setLoadedPlace","placeId","useParams","useForm","title","value","isValid","description","formState","InputHandler","setFormData","useEffect","fetchPlace","process","responseData","place","updatePlaceSubmitHandler","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","className","onClear","onSubmit","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","disabled","isvalid","inputReducer","state","action","val","validate","isTouched","props","useReducer","inputState","dispatch","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","style","children","onCancel","header","show","footer","onClick","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","useRef","url","method","body","headers","httpAbortCtrl","AbortController","current","fetch","signal","response","json","filter","rc","ok","Error","message","forEach","ac","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}