{"version":3,"file":"static/js/542.180aed4a.chunk.js","mappings":"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","sources":["shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"sourcesContent":["import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.css\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (rc) => rc !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((ac) => ac.abort());\r\n    };\r\n  }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\r\nimport \"./UserItem.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\n\r\nfunction UserItem(props) {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar\r\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.name}\r\n            />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\nimport UserItem from \"./UserItem\";\r\nimport \"./UsersList.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\n\r\nfunction UsersList(props) {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No users found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {props.items.map((user) => (\r\n        <UserItem\r\n          key={user.id}\r\n          id={user.id}\r\n          name={user.name}\r\n          image={user.image}\r\n          placeCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default UsersList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport UsersList from \"../components/UsersList\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nfunction Users(props) {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users\"\r\n        );\r\n\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner asOverlay />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n"],"names":["props","className","style","children","onCancel","onClear","header","show","error","footer","onClick","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","rc","ok","Error","message","useEffect","forEach","ac","abort","clearError","src","image","alt","width","height","Card","to","id","process","name","placeCount","items","length","map","user","places","loadedUsers","setLoadedUsers","fetchUsers","users","ErrorModal","LoadingSpinner","asOverlay"],"sourceRoot":""}