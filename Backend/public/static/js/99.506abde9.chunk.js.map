{"version":3,"file":"static/js/99.506abde9.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\n//import { useNavigate } from \"react-router-dom\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport \"./PlaceForm.css\";\r\nimport useForm from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nfunction NewPlace(props) {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  //const navigate = useNavigate();\r\n  const history = useHistory();\r\n  const [formState, InputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isvalid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isvalid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isvalid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isvalid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const placeSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/places\",\r\n        \"POST\",\r\n        formData,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      //navigate(\"/\");\r\n      history.push(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title!\"\r\n          onInput={InputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={InputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address!\"\r\n          onInput={InputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={InputHandler}\r\n          errorText=\"Please provide an image.\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isvalid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default NewPlace;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpd,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        label={props.label}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.css\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId == action.inputId) {\r\n          formIsValid = formIsValid && action.isvalid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isvalid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isvalid: action.isvalid },\r\n        },\r\n        isvalid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isvalid: initialFormValidity,\r\n  });\r\n\r\n  const InputHandler = useCallback((id, value, isvalid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isvalid: isvalid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, InputHandler, setFormData];\r\n};\r\n\r\nexport default useForm;\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (rc) => rc !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((ac) => ac.abort());\r\n    };\r\n  }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["props","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","history","useHistory","useForm","title","value","isvalid","description","address","image","formState","InputHandler","placeSubmitHandler","event","preventDefault","formData","FormData","append","inputs","process","Authorization","token","push","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","disabled","useState","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","center","src","alt","Button","onClick","current","click","inputReducer","state","action","val","validate","isTouched","useReducer","initialValue","initialValid","inputState","dispatch","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","children","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","url","method","body","headers","httpAbortCtrl","AbortController","fetch","signal","response","json","responseData","filter","rc","ok","Error","message","forEach","ac","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}