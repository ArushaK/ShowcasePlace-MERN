{"version":3,"file":"static/js/191.2eeabdc4.chunk.js","mappings":"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","sources":["shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","user/pages/Auth.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpd,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        label={props.label}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.css\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId == action.inputId) {\r\n          formIsValid = formIsValid && action.isvalid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isvalid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isvalid: action.isvalid },\r\n        },\r\n        isvalid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isvalid: initialFormValidity,\r\n  });\r\n\r\n  const InputHandler = useCallback((id, value, isvalid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isvalid: isvalid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, InputHandler, setFormData];\r\n};\r\n\r\nexport default useForm;\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (rc) => rc !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((ac) => ac.abort());\r\n    };\r\n  }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useContext, useState } from \"react\";\r\n\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport useForm from \"../../shared/hooks/form-hook\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\n\r\nimport \"./Auth.css\";\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [formState, InputHandler, setFormdata] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isvalid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isvalid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const loginHandler = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState.inputs);\r\n\r\n    if (isLogin) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n          \"POST\",\r\n          formData\r\n        );\r\n\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  const signupHandler = () => {\r\n    if (!isLogin) {\r\n      setFormdata(\r\n        { ...formState.inputs, name: undefined, image: undefined },\r\n        formState.inputs.email.isvalid && formState.inputs.password.isvalid\r\n      );\r\n    } else {\r\n      setFormdata(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isvalid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isvalid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLogin((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={loginHandler}>\r\n          {!isLogin && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a Name!\"\r\n              onInput={InputHandler}\r\n            />\r\n          )}\r\n          {!isLogin && (\r\n            <ImageUpload\r\n              center\r\n              id=\"image\"\r\n              onInput={InputHandler}\r\n              errorText=\"Please provide an image.\"\r\n            />\r\n          )}\r\n          <Input\r\n            id=\"email\"\r\n            element=\"input\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address!\"\r\n            onInput={InputHandler}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            element=\"input\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password!\"\r\n            onInput={InputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isvalid}>\r\n            {isLogin ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={signupHandler}>\r\n          SWITCH TO {isLogin ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"names":["props","useState","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","className","id","ref","style","display","type","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","onClick","current","click","errorText","inputReducer","state","action","value","val","validate","validators","isTouched","useReducer","initialValue","initialValid","inputState","dispatch","changeHandler","touchHandler","element","label","placeholder","onBlur","rows","htmlFor","children","onCancel","onClear","header","show","error","footer","ModalOverlay","content","headerClass","onSubmit","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","inputs","isvalid","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequests","sendRequest","url","method","body","headers","httpAbortCtrl","AbortController","push","fetch","signal","response","json","responseData","filter","rc","ok","Error","message","forEach","ac","abort","clearError","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test","auth","useContext","AuthContext","isLogin","setIsLogin","useForm","email","password","InputHandler","setFormdata","loginHandler","console","log","process","JSON","stringify","login","userId","token","formData","FormData","append","name","image","ErrorModal","Card","LoadingSpinner","asOverlay","Input","ImageUpload","disabled","inverse","undefined","prev"],"sourceRoot":""}